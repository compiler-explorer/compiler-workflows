name: Daily build action
description: "Builds a 'daily build' of Compiler Explorer's compilers"
inputs:
  image:
    description: "Docker image to build with"
    required: true
  name:
    description: "Build name to de-duplicate unchanged code runs against"
    required: true
  command:
    description: "Command to run"
    required: true
  args:
    description: "Argument to command"
    required: true
  AWS_ACCESS_KEY_ID:
    description: "Access key"
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: "Secret key"
    required: true

runs:
  using: "composite"
  steps:
    - name: Start from a clean directory
      uses: AutoModality/action-clean@v1.1.0
    - uses: actions/checkout@v2
    - name: Get previous build version number, and start the run
      shell: bash
      id: previous
      run: |
        echo revision=$(curl -sf https://compiler-explorer.s3.amazonaws.com/opt/.buildrevs/${{ inputs.name }} || true) >> "${GITHUB_OUTPUT}"
        ./pre-run.sh
    - name: Daily build of ${{ inputs.name }}
      shell: bash
      id: build
      run: |
        mkdir dist
        chmod og+w dist # some builds don't run as root, so let anyone write here
        echo ::group::Docker build
        docker run -v$(pwd)/dist:/dist --rm compilerexplorer/${{ inputs.image }}-builder \
          bash ${{ inputs.command }} ${{ inputs.args }} \
          /dist "${{ steps.previous.outputs.revision }}" | tee output.log
        echo ::endgroup::
        echo ::group::Translate docker output into GH variables
        gawk -e 'match($0, /^ce-build-(\w+):(.*)/, m) { print m[1] "=" m[2]; }' output.log >> "${GITHUB_OUTPUT}"
        echo ::endgroup::
    - name: Get output filename
      shell: bash
      if: ${{ steps.build.outputs.status != 'SKIPPED' }}
      id: filenames
      run: |
        echo source=$(pwd)/dist/$(basename ${{ steps.build.outputs.output }}) >> "${GITHUB_OUTPUT}"
        echo s3dest=s3://compiler-explorer/opt/$(basename ${{ steps.build.outputs.output }}) >> "${GITHUB_OUTPUT}"
        echo ${{ steps.build.outputs.revision }} > ${{ inputs.name }}
    - name: Copy output to S3
      if: ${{ steps.build.outputs.status != 'SKIPPED' }}
      uses: prewk/s3-cp-action@v2
      with:
        source: ${{ steps.filenames.outputs.source }}
        dest: ${{ steps.filenames.outputs.s3dest }}
        aws_access_key_id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
    - name: Copy revision to S3
      if: ${{ steps.build.outputs.status != 'SKIPPED' }}
      uses: prewk/s3-cp-action@v2
      with:
        source: ${{ inputs.name }}
        dest: s3://compiler-explorer/opt/.buildrevs/${{ inputs.name }}
        aws_access_key_id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
    - name: Update build logs
      shell: bash
      if: always()
      run: ./post-run.sh "${{ inputs.name }}" "${{ steps.build.outputs.status }}" "${{ steps.filenames.outputs.s3dest }}" "${{ steps.previous.outputs.start }}"
      env:
        AWS_DEFAULT_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
